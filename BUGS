
 o Mountpoints and fs options for encrypted partitions are not remembered
   when partman restarts. (max)

 o Options like mountpoint are not removed when method changes to swap.
   This makes it impossible for the user to correct /-on-crypto or /boot-
   on-crypto errors. (max)

 o Testing has too old cryptsetup which doesn't support LUKS and doesn't
   include the hooks for dm-crypt/LUKS-on-root

 o Grub fails when root is encrypted (even though /boot is not). Seems that
   it tries to be a bit too smart and gets confused by the encrypted root.
   It puts up scary error messages and refuses to generate
   /target/boot/grub/menu.lst but grub is actually installed to the MBR so
   the install actually works. Workaround: a hand-crafted grub menu.lst can
   be created from a shell before reboot. (david)
 
 o The initramfs doesn't include the crypto modules needed for crypto-on-root.
   I haven't had time to diagnose yet. But my guess is that the hook doesn't
   appreciate being executed from a chrooted /target without the proper
   /dev/mapper/crypt0 device to inspect. Will probably solve this by writing
   the modules to /target/etc/mkinitramfs/modules before initramfs 
   regeneration. (david)

 o Partition erase eats too much memory and causes OOM. Might be a kernel
   problem with loop-AES. Just dd if=/dev/zero of=/dev/loop0 bs=4k on 
   encrypted loop reproducible triggers it (64mb system). There is a big 
   increase of bio and biovec-1 in slabinfo just before OOM. (max)

   Perhaps it's not caused by loop-AES: dd to /dev/hda1 in low memory
   conditions can sometimes also trigger OOM. Can't be scsi_cmd leak as
   the problem also shows with IDE. skbuff_head_cache looks normal. 
   Debug dumps: http://nusquama.org/~max/d-i/oom-debug

   Andrew Morton Re: 2.6.15.2:
   (http://groups.google.de/group/linux.kernel/msg/444d1c086feab026)
     There remain some box-killing bugs:
     - The scsi_cmd leak
     - The BIO-uses-ZONE_DMA-hence-oom-killing bug
     - A skbuff_head_cache leak causes oom-killings. 

