#!/bin/sh

# This is a hack to change the devices of encrypted loop mounts in fstab
# from /dev/loop/.. to their real devices.

. /lib/partman/definitions.sh

mount_options () {
    local cryptdev cryptid cipher keyfile opts
    cryptdev=$1
    cryptdevdir=$2
    devdir=$3
 
    cipher=$(cat $devdir/cipher)
    keytype=$(cat $devdir/keytype)
 
    opts="loop=${cryptdev},encryption=${cipher}"

    # add gpgkey= option if applicable
    if [ $keytype = keyfile ] && [ -f $devdir/keyfile ]; then
        keyfile=$(basename $(cat $devdir/keyfile))
        opts="${opts},gpgkey=/etc/loopkeys/$keyfile"
    fi

    # handle non-swap partitions with random key
    if [ $keytype = random ] && [ -f $cryptdevdir/mountpoint ]; then
        mnt=$(cat $cryptdevdir/mountpoint)
        if [ $mnt = /tmp ]; then
            opts="${opts},phash=random/1777"
        else 
            opts="${opts},phash=random"
        fi
    fi

    echo $opts
}

for dev in $DEVICES/*; do
    [ -d "$dev" ] || continue
    cd $dev
    partitions=
    open_dialog PARTITIONS
    while { read_line num id size type fs path name; [ "$id" ]; }; do
        [ "$fs" != free ] || continue
        partitions="$partitions $id,$path"
    done
    close_dialog
    
    # "is crypto?"
    [ -f crypt_realdev ] || continue

    for part in $partitions; do
        id=${part%,*}
        path=${part#*,}

        r=$(cat crypt_realdev)
        set -- $(IFS=: && echo $r)
        realdev=$1
        realdevnum=$2
        realdevdir=$3

        [ -f $realdevdir/cipher ] || continue
        [ -f $realdevdir/keytype ] || continue
        [ -f $id/method ] || continue

        # skip unless swap or to be mounted
        method=$(cat $id/method)
        if [ "$method" != swap ] && [ ! -f $id/mountpoint ]; then
            continue
        fi

        m=$(cat $realdevdir/method)
        type=${m#*/}
        if [ "$type" != loop-AES ]; then
            continue
        fi

        realdev=$(mapdevfs $realdev)
        cryptdev=$(mapdevfs $path)
        entry=$(grep ^$cryptdev /target/etc/fstab)

        if [ "$entry" ]; then
            # add options
            opts=$(set -- $entry && echo $4)
            newopts=$(mount_options $cryptdev $dev/$id $realdevdir)
            
            # XXX: what happens for
            # /dev/foo /path auto noauto
            sed -i "\#^$cryptdev# { s#\($opts\)\([[:blank:]]\)#\1,$newopts\2# }" /target/etc/fstab

            # replace loop with realdev
            sed -i "s#^$cryptdev#$realdev#" /target/etc/fstab
        fi
    done
done

# vim:set ts=4 sw=4 expandtab:

